#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
瘋狂π數字流生成器
像亂碼一樣瘋狂輸出π的數字，永遠不停
"""

import time
import sys
import threading
import random


def crazy_pi_stream():
    """
    瘋狂π數字流 - 永不停止的數字雨
    """
    # 預計算的π數字（很多位）
    pi_digits = "31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711390098488240128583616035637076601047101819429555961989467678374494482553797747268471040475346462080466842590694912933136770289891521047521620569660240580381501935112533824300355"

    index = 0
    output_count = 0

    print("💥 瘋狂π數字流啟動！")
    print("🌊 數字雨即將開始...")
    time.sleep(1)
    print("🚀 GO GO GO!!!\n")

    while True:
        try:
            # 瘋狂輸出π數字
            digit = pi_digits[index % len(pi_digits)]
            print(digit, end="", flush=True)

            index += 1
            output_count += 1

            # 偶爾加點特效
            if random.random() < 0.001:  # 0.1%機率
                special_chars = ["π", "∞"]
                print(random.choice(special_chars), end="", flush=True)

            # 超快速輸出
            time.sleep(0.001)

        except:
            # 任何錯誤都忽略，繼續運行
            continue


def matrix_style_pi():
    """
    駭客風格的π數字矩陣雨
    """
    print("綠色π矩陣...")
    time.sleep(1)

    pi_digits = "31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989"

    pos = 0

    while True:
        try:
            # 多列同時輸出
            line = ""
            for col in range(80):  # 80個字符寬度
                if random.random() < 0.3:  # 30%機率顯示π數字
                    line += pi_digits[(pos + col) % len(pi_digits)]
                else:
                    line += random.choice("0123456789")

            print(line, flush=True)
            pos += 1
            time.sleep(0.05)

        except:
            continue


def hyper_speed_pi():
    """
    超高速π數字輸出
    """
    pi_digits = "31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711390098488240128583616035637076601047101819429555961989467678374494482553797747268471040475346462080466842590694912933136770289891521047521620569660240580381501935112533824300355"

    print("超高速π數字流！")
    print("準備接受數字轟炸...")
    time.sleep(1)

    index = 0

    while True:
        try:
            # 超快速輸出
            for _ in range(100):  # 每次輸出100個數字
                print(pi_digits[index % len(pi_digits)], end="")
                index += 1

            sys.stdout.flush()
            # 幾乎沒有延遲
            time.sleep(0.001)

        except:
            continue


def main():
    """主程序選擇"""
    print("選擇您的π瘋狂模式：")
    print("1. 瘋狂π數字流（像亂碼一樣）")
    print("2. 駭客風格π矩陣雨")
    print("3. 超高速π數字轟炸")

    choice = input("選擇模式 (1-3，直接Enter選1): ").strip()

    print("\n" + "警告：程序即將進入無限循環模式！" * 3)
    print("只能通過強制關閉才能停止！")

    countdown = input("\n準備好了嗎？按Enter開始倒數...")

    for i in range(3, 0, -1):
        print(f"{i}...")
        time.sleep(1)

    print("啟動！！！\n")

    try:
        if choice == "2":
            matrix_style_pi()
        elif choice == "3":
            hyper_speed_pi()
        else:
            crazy_pi_stream()
    except:
        # 即使出錯也要重啟
        print("\n重新啟動...")
        main()


if __name__ == "__main__":
    main()
